{
  "hash": "c7e2483e681592a56276380b11575b05",
  "result": {
    "markdown": "---\ntitle: \"Bonus (Advanced): Deploy repositories in your own VLab\"\nauthor: \"VLab Course Team\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\nengine: knitr\n---\n\n\n> This optional guide is for **advanced users** who want to understand how the VLab5 RStudio environment itself is deployed and how to reproduce something similar in their own VLab.\n\n---\n\n## 1) Deployment of RStudio Server in a VLab\n\nThe deployment process is documented in this D4Science support ticket:  \n<https://support.d4science.org/issues/23536#note-15>\n\nThe RStudio server setup for VLab5 is managed in the following repository:  \n<https://code-repo.d4science.org/gCubeSystem/rstudio-d4science/src/branch/fisheriesatlas-vlab5>\n\nKey files include:\n- **07_vlab5_github_repositories.sh** — defines which GitHub repositories (stable/dev) are preloaded into the environment.  \n  [View script](https://code-repo.d4science.org/gCubeSystem/rstudio-d4science/src/branch/fisheriesatlas-vlab5/07_vlab5_github_repositories.sh)\n- **Dockerfile** — defines the RStudio server Docker image and how repositories and dependencies are installed.  \n  [View Dockerfile](https://code-repo.d4science.org/gCubeSystem/rstudio-d4science/src/branch/fisheriesatlas-vlab5/Dockerfile)\n\n> ⚠️ This is more **technical and system-level**. If you are interested in customizing or deploying your own RStudio VLab instance, we can schedule a dedicated walkthrough.\n\n---\n\n## 2) Managing a Global `renv` cache in Docker images\n\nWhen building custom RStudio Docker images for your own VLab, it is possible to preconfigure a **shared global cache** for `renv`. This ensures that all projects within the VLab use the same package cache, saving time and storage.\n\nThis is done by adding a line to `.Renviron.site` **during Docker build**:\n\n```dockerfile\nRUN echo 'RENV_PATHS_CACHE=\"~/blue-cloud-dataspace/GlobalFisheriesAtlas/cacheRenv\"' \\\n  >> \"${R_HOME}/etc/Renviron.site\"\n```\n\nReference: <https://support.d4science.org/issues/29739>\n\n### Key points:\n- You can set `RENV_PATHS_CACHE` to **any directory**, depending on your VLab setup.  \n- Using **`~/blue-cloud-dataspace/`** is recommended: it is accessible across all users and all VLab instances (though slightly slower than local storage).  \n- `.Renviron.site` ensures the cache is **global to the image** — every repository opened in RStudio will reuse this shared cache.\n\nEffectively:\n- Each repository still has its own `renv.lock` file (to ensure reproducibility).  \n- But the **package binaries** are stored once in the shared cache, instead of reinstalling them for every project.\n\n---\n\n## 3) The truly simple path (what to consider)\n\nIf you want to deploy **the same setup** as VLab5 in *your own* VLab, here are the essentials to look at and adapt per VLab:\n\n1. **D4Science ticket (reference implementation & notes):**\n   - See: https://support.d4science.org/issues/23536#note-15  \n     *(Contains key decisions & parameters used for the Fisheries Atlas VLab RStudio.)*\n\n2. **RStudio Server image for D4Science (to adapt):**\n   - Repo: https://code-repo.d4science.org/gCubeSystem/rstudio-d4science/src/branch/fisheriesatlas-vlab5\n   - Files to review:\n     - `Dockerfile`  \n       https://code-repo.d4science.org/gCubeSystem/rstudio-d4science/src/branch/fisheriesatlas-vlab5/Dockerfile\n     - `07_vlab5_github_repositories.sh` (preloads the course repositories)  \n       https://code-repo.d4science.org/gCubeSystem/rstudio-d4science/src/branch/fisheriesatlas-vlab5/07_vlab5_github_repositories.sh\n\n> If this is interesting for your team, we can do a short technical walkthrough per VLab, since each environment may require minor adjustments (base image, permissions, storage mounts, etc.).\n\n---\n\n## 4) Summary\n- **Basic users**: You don’t need to worry about this — VLab5 is already configured.  \n- **Advanced users**: You can adapt the Dockerfile and scripts for your own VLab deployment, preload specific repos, and configure a global `renv` cache.  \n- **Best practice**: Use a cache in `blue-cloud-dataspace` for shared accessibility across all VLab instances.  \n\n> ✅ If you are interested in deploying or customizing your own RStudio environment with these settings, reach out — we can provide a step-by-step session on adapting the Dockerfile and repository scripts for your use case.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}