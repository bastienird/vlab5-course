---
title: "GTA Workflow Architecture"
author: "VLab Course Team"
---

This lesson summarizes how Global Tuna Atlas (GTA) datasets are built and versioned, how **Level 2** products derive from **Level 0**, and how reproducibility is enforced with the **geoflow** framework and **Docker**.

- **Level 0 → Level 2**: Level 2 datasets are *derived products* built from Level 0 (harmonized sources) by applying additional, documented processing (e.g., raising, strata updates). Level 2 better matches nominal totals but **is not appropriate for quota/legality studies** because precise geo‑referencing uncertainty remains in some cases.
- **Automation**: The end‑to‑end pipeline is orchestrated with the **[geoflow](https://github.com/r-geoflow/geoflow)** R package (tasks, flows, inputs/outputs).  
- **Reproducibility**: Each dataset build is backed by a **Dockerfile** bundling data access, code, and package dependencies; outputs are archived with DOIs on Zenodo, with an attached PDF documenting every step and its impact.

---

# Per-release PDF (impact of each step)

For **each IRD Zenodo release**, the dataset is built using the workflow script
[`create_global_tuna_atlas_dataset_v2025.R`](https://github.com/firms-gta/geoflow-tunaatlas/blob/master/tunaatlas_scripts/generation/create_global_tuna_atlas_dataset_v2025.R)
from the `firms-gta/geoflow-tunaatlas` repository.

During the build, the **CWP.dataset** R package generates an **automated PDF report** that:
- lists every workflow step (ingest → harmonize → raise → aggregate/align → QA/QC),
- records the **parameters and assumptions** used,
- and quantifies the **impact on the data** (e.g., percent changes, coverage adjustments, strata updates).

Example: [PDF impact report](https://zenodo.org/record/15496164/files/Recap_of_the_process.pdf).

This documentation is the human-readable complement to the machine-readable provenance stored in flow definitions and logs.


---

## Workflow automation with `geoflow`

To ensure reproducibility and traceability, GTA workflows are implemented with the **`geoflow`** R package. `geoflow` structures pipelines into a series of **tasks** with explicit inputs, outputs, and metadata.

In practice, the list of datasets to build and publish is maintained in a **machine-readable entities table** (CSV).  
For GTA, see the entities file:
[`geoflow_entities_tuna_global_datasets_IRD_level1_2022 - IRD_level2.csv`](https://github.com/firms-gta/geoflow-tunaatlas/blob/master/geoflow_entities_tuna_global_datasets_IRD_level1_2022%20-%20IRD_level2.csv).

This **entities CSV** drives the run by declaring, for each dataset ("entity"):
- **Identification & description**: identifier, title, short abstract.
- **Inputs**: where to read source data (e.g., DOI URLs, RFMO downloads, private paths when applicable).
- **Processing hints**: task names/parameters, expected temporal/spatial aggregations.
- **Outputs**: target formats and locations (file names, folders).
- **Publication targets**: Zenodo (community/concept DOI), and, when relevant, GeoServer/GeoNetwork/database destinations.
- **Metadata**: licensing, keywords, contacts, temporal/spatial coverage, version/release info.

During execution, `geoflow`:
1. **Reads** the entities CSV and instantiates the flow of tasks per entity,
2. **Runs** the declared steps (ingest → harmonize → raise → aggregate → QA/QC),
3. **Exports** data and generates human-readable reports,
4. **Publishes** outputs with persistent identifiers (DOIs) and records machine-readable provenance.

Benefits of this approach:
- Precise tracking of **data provenance** (which task produced what, with which parameters),
- Automated export and **DOI-based publication** on Zenodo,
- Optional integration with **GeoServer**/**GeoNetwork** and databases,
- A single CSV "source of truth" versioned in Git to review changes to datasets and metadata.



---

# Quick run patterns

```r

# 1) Open the R project and restore exact dependencies
renv::restore()

# Create level 2 datasets

source('level_2_catch_local.R')

# Create effort datasets
targets::tar_make(script = "_targets_efforts.R")

```

---

# Key takeaways

- **Level 2** is derived from **Level 0** through documented, reproducible steps (geoflow).  
- **IRD Zenodo records** include a **PDF** documenting each step and its **impact on data**.


